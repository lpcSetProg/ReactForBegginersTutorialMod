{"ast":null,"code":"import _objectSpread from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport Order from \"./Order\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      // 1. take a copy of the existing state\n      var fishes = _objectSpread({}, _this.state.fishes); // object spread - take a copy of state\n      // 2. add our new fish to our fishes variable\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; // 3. set the new fishes object to state\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // 1. take a copy of state \n      var order = _objectSpread({}, _this.state.order); // 2. either add to the order or update number in order\n\n\n      order[key] = order[key] + 1 || 1; // 3. call setState to update our state object\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.ref = base.syncState(\"\".concat(storeId));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Header, {\n        tagline: \"S.E.T. IS COOL\",\n        age: 500,\n        cool: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"fishes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, Object.keys(this.state.fishes).map(function (key) {\n        return React.createElement(Fish, {\n          key: key,\n          index: key,\n          details: _this2.state.fishes[key],\n          addToOrder: _this2.addToOrder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      }))), React.createElement(Order, Object.assign({}, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(Inventory, {\n        addFish: this.addFish,\n        loadSampleFishes: this.loadSampleFishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js"],"names":["React","Header","Inventory","Order","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","loadSampleFishes","addToOrder","key","ref","syncState","storeId","Object","keys","map","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAGMC,G;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,EADJ;AAIJC,MAAAA,KAAK,EAAE;AAJH,K;;UAWRC,O,GAAU,UAAAC,IAAI,EAAI;AACf;AACA,UAAMH,MAAM,qBAAO,MAAKD,KAAL,CAAWC,MAAlB,CAAZ,CAFe,CAEwB;AACvC;;;AACAA,MAAAA,MAAM,eAAQI,IAAI,CAACC,GAAL,EAAR,EAAN,GAA8BF,IAA9B,CAJe,CAKf;;AACA,YAAKG,QAAL,CAAc;AACZN,QAAAA,MAAM,EAANA;AADY,OAAd;AAGF,K;;UAEDO,gB,GAAmB,YAAM;AACtB,YAAKD,QAAL,CAAc;AACVN,QAAAA,MAAM,EAAEL;AADE,OAAd;AAGF,K;;UAEDa,U,GAAa,UAACC,GAAD,EAAS;AAClB;AACA,UAAMR,KAAK,qBAAQ,MAAKF,KAAL,CAAWE,KAAnB,CAAX,CAFkB,CAGlB;;;AACAA,MAAAA,KAAK,CAACQ,GAAD,CAAL,GAAaR,KAAK,CAACQ,GAAD,CAAL,GAAa,CAAb,IAAkB,CAA/B,CAJkB,CAKlB;;AACA,YAAKH,QAAL,CAAc;AACVL,QAAAA,KAAK,EAALA;AADU,OAAd;AAIH,K;;;;;;;wCA/BkB;AAChB,WAAKS,GAAL,GAAWb,IAAI,CAACc,SAAL,WAAkBC,OAAlB,EAAX;AACF;;;6BAkCQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,gBAAhB;AAAiC,QAAA,GAAG,EAAE,GAAtC;AAA2C,QAAA,IAAI,EAAE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIC,MAAM,CAACC,IAAP,CAAY,KAAKf,KAAL,CAAWC,MAAvB,EAA+Be,GAA/B,CAAmC,UAAAN,GAAG;AAAA,eACvC,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,GAAX;AAAgB,UAAA,KAAK,EAAEA,GAAvB;AAA4B,UAAA,OAAO,EAAE,MAAI,CAACV,KAAL,CAAWC,MAAX,CAAkBS,GAAlB,CAArC;AAA6D,UAAA,UAAU,EAAE,MAAI,CAACD,UAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADuC;AAAA,OAAtC,CAFJ,CAFJ,CADJ,EAWI,oBAAC,KAAD,oBAAW,KAAKT,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAXJ,EAYI,oBAAC,SAAD;AACG,QAAA,OAAO,EAAE,KAAKG,OADjB;AAEG,QAAA,gBAAgB,EAAE,KAAKK,gBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CADJ;AAmBH;;;;EAhEahB,KAAK,CAACyB,S;;AAmExB,eAAelB,GAAf","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport Order from \"./Order\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\n\nclass App extends React.Component {\n    state = {\n        fishes: {\n          \n        },\n        order: {}\n    };\n\n    componentDidMount(){\n       this.ref = base.syncState(`${storeId}`);\n    };\n\n    addFish = fish => {\n       // 1. take a copy of the existing state\n       const fishes = {...this.state.fishes } // object spread - take a copy of state\n       // 2. add our new fish to our fishes variable\n       fishes[`fish${Date.now()}`] = fish;\n       // 3. set the new fishes object to state\n       this.setState({\n         fishes\n       });\n    };\n\n    loadSampleFishes = () => {\n       this.setState({\n           fishes: sampleFishes\n       })\n    };\n\n    addToOrder = (key) => {\n        // 1. take a copy of state \n        const order = { ...this.state.order };\n        // 2. either add to the order or update number in order\n        order[key] = order[key] + 1 || 1;\n        // 3. call setState to update our state object\n        this.setState({\n            order\n        });\n\n    }\n    \n \n\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"S.E.T. IS COOL\" age={500} cool={true}/>\n                    <ul className=\"fishes\">\n   \n                       {Object.keys(this.state.fishes).map(key => \n                       <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />)} \n                  \n                    </ul>\n                </div>\n          \n                <Order {...this.state} />  \n                <Inventory \n                   addFish={this.addFish}\n                   loadSampleFishes={this.loadSampleFishes}/>\n           \n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}