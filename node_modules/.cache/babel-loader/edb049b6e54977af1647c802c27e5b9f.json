{"ast":null,"code":"import _objectSpread from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport Order from \"./Order\";\nimport sampleFishes from \"../sample-fishes\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fishes: {},\n      object: {}\n    };\n\n    _this.addFish = function (fish) {\n      // 1. take a copy of the existing state\n      var fishes = _objectSpread({}, _this.state.fishes); // object spread - take a copy of state\n      // 2. add our new fish to our fishes variable\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; // 3. set the new fishes object to state\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"component did mount!\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Header, {\n        tagline: \"S.E.T. IS COOL\",\n        age: 500,\n        cool: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(Inventory, {\n        addFish: this.addFish,\n        loadSampleFishes: this.loadSampleFishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Order, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/levyprog/Desktop/Projects/Jan/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js"],"names":["React","Header","Inventory","Order","sampleFishes","App","state","fishes","object","addFish","fish","Date","now","setState","loadSampleFishes","console","log","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;IAEMC,G;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,EADJ;AAIJC,MAAAA,MAAM,EAAE;AAJJ,K;;UAORC,O,GAAU,UAAAC,IAAI,EAAI;AACf;AACA,UAAMH,MAAM,qBAAO,MAAKD,KAAL,CAAWC,MAAlB,CAAZ,CAFe,CAEwB;AACvC;;;AACAA,MAAAA,MAAM,eAAQI,IAAI,CAACC,GAAL,EAAR,EAAN,GAA8BF,IAA9B,CAJe,CAKf;;AACA,YAAKG,QAAL,CAAc;AACZN,QAAAA,MAAM,EAANA;AADY,OAAd;AAGF,K;;UAEDO,gB,GAAmB,YAAM;AACtB,YAAKD,QAAL,CAAc;AACVN,QAAAA,MAAM,EAAEH;AADE,OAAd;AAGF,K;;;;;;;wCAEmB;AAChBW,MAAAA,OAAO,CAACC,GAAR,CAAa,sBAAb;AACD;;;6BAGM;AACL,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,gBAAhB;AAAiC,QAAA,GAAG,EAAE,GAAtC;AAA2C,QAAA,IAAI,EAAE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,SAAD;AACG,QAAA,OAAO,EAAE,KAAKP,OADjB;AAEG,QAAA,gBAAgB,EAAE,KAAKK,gBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAOI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ;AAWH;;;;EA1Cad,KAAK,CAACiB,S;;AA6CxB,eAAeZ,GAAf","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport Order from \"./Order\";\nimport sampleFishes from \"../sample-fishes\";\n\nclass App extends React.Component {\n    state = {\n        fishes: {\n          \n        },\n        object: {}\n    };\n\n    addFish = fish => {\n       // 1. take a copy of the existing state\n       const fishes = {...this.state.fishes } // object spread - take a copy of state\n       // 2. add our new fish to our fishes variable\n       fishes[`fish${Date.now()}`] = fish;\n       // 3. set the new fishes object to state\n       this.setState({\n         fishes\n       });\n    };\n\n    loadSampleFishes = () => {\n       this.setState({\n           fishes: sampleFishes\n       })\n    };\n    \n    componentDidMount() {\n        console.log (\"component did mount!\")\n      }\n\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"S.E.T. IS COOL\" age={500} cool={true}/>\n                </div>\n                <Inventory \n                   addFish={this.addFish}\n                   loadSampleFishes={this.loadSampleFishes}/>\n                <Order />  \n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}